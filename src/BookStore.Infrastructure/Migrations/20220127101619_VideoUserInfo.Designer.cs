// <auto-generated />
using System;
using FileStore.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(VideoCatalogDbContext))]
    [Migration("20220127101619_VideoUserInfo")]
    partial class VideoUserInfo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FileStore.Domain.Models.Season", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<TimeSpan>("IntroDuration")
                        .HasColumnType("time");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("SeriesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SeriesId");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("FileStore.Domain.Models.Series", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<TimeSpan>("IntroDuration")
                        .HasColumnType("time");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("FileStore.Domain.Models.VideoFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("Origin")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quality")
                        .HasColumnType("int");

                    b.Property<int>("SeasonId")
                        .HasColumnType("int");

                    b.Property<int>("SeriesId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SeasonId");

                    b.HasIndex("SeriesId");

                    b.ToTable("VideoFile");
                });

            modelBuilder.Entity("FileStore.Domain.Models.VideoFileExtendedInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Cover")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("VideoFileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VideoFileId")
                        .IsUnique();

                    b.ToTable("VideoFileExtendedInfos");
                });

            modelBuilder.Entity("FileStore.Domain.Models.VideoFileUserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Position")
                        .HasColumnType("float");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<int>("VideoFileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VideoFileId")
                        .IsUnique();

                    b.ToTable("VideoFileUserInfos");
                });

            modelBuilder.Entity("FileStore.Domain.Models.Season", b =>
                {
                    b.HasOne("FileStore.Domain.Models.Series", "Series")
                        .WithMany("Seasons")
                        .HasForeignKey("SeriesId")
                        .IsRequired();
                });

            modelBuilder.Entity("FileStore.Domain.Models.VideoFile", b =>
                {
                    b.HasOne("FileStore.Domain.Models.Season", "Season")
                        .WithMany("Files")
                        .HasForeignKey("SeasonId")
                        .IsRequired();

                    b.HasOne("FileStore.Domain.Models.Series", "Series")
                        .WithMany("Files")
                        .HasForeignKey("SeriesId")
                        .IsRequired();
                });

            modelBuilder.Entity("FileStore.Domain.Models.VideoFileExtendedInfo", b =>
                {
                    b.HasOne("FileStore.Domain.Models.VideoFile", "VideoFile")
                        .WithOne("VideoFileExtendedInfo")
                        .HasForeignKey("FileStore.Domain.Models.VideoFileExtendedInfo", "VideoFileId")
                        .IsRequired();
                });

            modelBuilder.Entity("FileStore.Domain.Models.VideoFileUserInfo", b =>
                {
                    b.HasOne("FileStore.Domain.Models.VideoFile", "VideoFile")
                        .WithOne("VideoFileUserInfo")
                        .HasForeignKey("FileStore.Domain.Models.VideoFileUserInfo", "VideoFileId")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
